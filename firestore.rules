rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read and write their own documents
    match /documents/{documentId} {
      // SECURITY FIX: Removed dangerous fallback condition - only allow access to user's own documents
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId &&
        request.resource.data.keys().hasAll(['userId', 'name', 'createdAt']) &&
        request.resource.data.userId is string &&
        request.resource.data.name is string;
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.userId &&
        request.auth.uid == request.resource.data.userId &&
        // Prevent userId from being changed
        resource.data.userId == request.resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Allow authenticated users to read and write their own user profiles
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read and write their own storage usage data
    match /storage/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
